name: Build

on:
  push:
    tags:
      - "1.*"
      - "2.*"
      - "3.*"
    branches:
  pull_request:
  workflow_dispatch:

jobs:
  build-node-old:
    strategy:
      fail-fast: false
      matrix:
        node: [14.0.0, 15.7.0]
        architecture: [x64, arm64]
        include:
          - python_version: "3.10"
          - architecture: x64
            architecture_node: x64
            target_architecture: x64
          - architecture: arm64
            architecture_node: x64
            target_architecture: arm64
            extra_compile_flags: -arch arm64
            EXTRA_NODE_PRE_GYP_FLAGS: --target_arch=arm64
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          architecture: ${{ matrix.architecture_node }}
      - run: node --version
      - run: npm --version
      - run: npm config set msbuild_path "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe"
        if: ${{ runner.os == 'Windows' }}
      - run: npm install --build-from-source --verbose
        env:
          npm_config_arch: ${{ matrix.architecture }}
          npm_config_python: python${{ matrix.python_version }}
          npm_config_target_arch: ${{ matrix.target_architecture }}
          CFLAGS: ${{ matrix.extra_compile_flags }}
          CPPFLAGS: ${{ matrix.extra_compile_flags }}
          EXTRA_NODE_PRE_GYP_FLAGS: ${{ matrix.EXTRA_NODE_PRE_GYP_FLAGS }}
      - run: ./node_modules/.bin/node-pre-gyp package testpackage
        if: ${{ matrix.target_architecture != 'arm64' }}
      - run: ./node_modules/.bin/node-pre-gyp package --target_arch=${{ matrix.target_architecture }}
        if: ${{ matrix.target_architecture == 'arm64' }}
      - uses: actions/upload-artifact@v3
        with:
          path: build/stage/julianhille/MuhammaraJS/releases/download/**/*.gz
          name: bindings
          if-no-files-found: error